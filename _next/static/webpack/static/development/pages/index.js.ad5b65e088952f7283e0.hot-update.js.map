{"version":3,"file":"static/webpack/static/development/pages/index.js.ad5b65e088952f7283e0.hot-update.js","sources":["webpack:///./components/Footman.tsx","webpack:///./components/LayoutManager.tsx"],"sourcesContent":["import React from \"react\";\n\ninterface FootmanInterface {\n  footerColor?: string;\n}\n\nconst Footman: React.FC<FootmanInterface> = props => {\n  return (\n    <React.Fragment>\n      <div className=\"on-foot\">Â© {new Date().getFullYear()} Untung So Andryanto</div>\n      <style jsx>{`\n        .on-foot {\n          position: fixed;\n          bottom: 16px;\n          margin-top: 16px;\n          font-size: 10px;\n          width: 100%;\n          text-align: center;\n          color: ${!props.footerColor ? \"var(--white)\" : \"\"};\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nexport { Footman };\n","import React, { ReactChild } from \"react\";\nimport { colorPallete } from \"../constant/color\";\nimport Head from \"next/head\";\nimport { Navigation } from \"../components/Navigation\";\nimport { Footman } from \"../components/Footman\";\n\ninterface LayoutManagerInterface {\n  children: ReactChild | ReactChild[];\n  htmlHeadTitle: string;\n}\n\nconst LayoutManager: React.FC<LayoutManagerInterface> = props => {\n  return (\n    <React.Fragment>\n      <Color />\n      <Head>\n        <title>{props.htmlHeadTitle} | USX Labo</title>\n        <meta name=\"viewport\" content=\"initial-scale=1.0, width=device-width\" />\n        <link rel=\"icon\" type=\"image/x-icon\" href=\"/favicon.png\" />\n      </Head>\n      <Navigation />\n      {props.children}\n      <Footman />\n      <style jsx global>{`\n        @import url(\"https://fonts.googleapis.com/css?family=Karla:400,700&display=swap\");\n        * {\n          margin: 0;\n          padding: 0;\n          font-family: \"Karla\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n            \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nconst Color = () => {\n  const technicolor = colorPallete.map(i => `--${i.color}: ${i.hexadecimal};`).join(\" \");\n  return (\n    <React.Fragment>\n      <style jsx global>{`\n        :root {\n          ${technicolor}\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nexport { LayoutManager };\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAeA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AATA;AAAA;AAAA;AAqBA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;;;;;A","sourceRoot":""}